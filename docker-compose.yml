services:
  postgres:
    image: postgres
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 1m30s
      timeout: 30s
      retries: 10
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - ssc_network
  ssc_backend:
    build: ./api
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL_DOCKER:?database URL is required}
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - ssc_network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - ssc_network
networks:
  ssc_network:
    driver: bridge

volumes:
  pgdata:
